@page
@model Pages.NewsArticles.IndexModel

@{
    ViewData["Title"] = "News Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<style>
    /* Theme Variables - Customize these to change the theme */
    :root {
    --primary-color: #0056b3; /* Example primary color (like buttons) */
    --secondary-color: #6c757d; /* Example secondary color */
    --background-color: #f8f9fa; /* Light background */
    --text-color: #343a40; /* Dark text */
    --accent-color: #ffc107; /* Example accent color (like warnings) */
    --article-background: #ffffff; /* Article background */
    --article-border: #dee2e6; /* Article border color */
    --meta-color: #6c757d; /* Meta text color */
    }

    body {
    background-color: var(--background-color);
    color: var(--text-color);
    font-family: sans-serif; /* Example font */
    }

    h1, h2, h3, h4{
    color: var(--text-color);
    }

    .btn-primary {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    }

    .btn-primary:hover {
    background-color: darken(var(--primary-color), 10%); /* Example hover effect - function needs to be defined or replaced with specific color */
    border-color: darken(var(--primary-color), 10%); /* Example hover effect */
    }

    .btn-warning {
    background-color: var(--accent-color);
    border-color: var(--accent-color);
    color: var(--text-color); /* Ensure text is visible on warning button */
    }

    .btn-warning:hover {
    background-color: darken(var(--accent-color), 10%);
    border-color: darken(var(--accent-color), 10%);
    }

    .btn-info {
    background-color: var(--secondary-color);
    border-color: var(--secondary-color);
    }

    .btn-info:hover {
    background-color: darken(var(--secondary-color), 10%);
    border-color: darken(var(--secondary-color), 10%);
    }

    .btn-danger {
    background-color: #dc3545; /* Default danger color - could also be a theme variable */
    border-color: #dc3545;
    }

    .btn-danger:hover {
    background-color: darken(#dc3545, 10%);
    border-color: darken(#dc3545, 10%);
    }


    .news-container {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    }

    .news-article {
    border: 1px solid var(--article-border);
    margin-bottom: 20px;
    padding: 15px;
    border-radius: 5px;
    background-color: var(--article-background);
    }

    .news-article h2 {
    margin-top: 0;
    margin-bottom: 10px;
    color: var(--text-color);
    }

    .news-article h3 {
    margin-top: 0;
    margin-bottom: 15px;
    color: var(--secondary-color);
    font-size: 1.2em;
    }

    .news-article .news-meta {
    font-size: 0.9em;
    color: var(--meta-color);
    margin-bottom: 10px;
    }

    .news-article .news-content-preview {
    margin-bottom: 15px;
    color: var(--text-color);
    }

    .news-actions {
    text-align: right;
    }

    .news-actions a {
    margin-left: 5px;
    }

    .create-new-button {
    margin-bottom: 20px;
    }

    /* Dark Theme Example - Uncomment to switch to dark theme */
    /*.dark-theme {
    --primary-color: #00aaff;
    --secondary-color: #adb5bd;
    --background-color: #343a40; !* Dark background *!
    --text-color: #f8f9fa; !* Light text *!
    --accent-color: #ffdd57;
    --article-background: #495057;
    --article-border: #6c757d;
    --meta-color: #adb5bd;
    }

    body.dark-theme {
    background-color: var(--background-color);
    color: var(--text-color);
    }

    .dark-theme h1, .dark-theme h2, .dark-theme h3 {
    color: var(--text-color);
    }

    .dark-theme .news-article {
    background-color: var(--article-background);
    border-color: var(--article-border);
    }

    .dark-theme .news-article h2 {
    color: var(--text-color);
    }

    .dark-theme .news-article h3 {
    color: var(--secondary-color);
    }

    .dark-theme .news-article .news-meta {
    color: var(--meta-color);
    }

    .dark-theme .news-article .news-content-preview {
    color: var(--text-color);
    }*/


</style>

@* To enable Dark Theme, add the class "dark-theme" to the body tag, e.g., <body class="dark-theme">*@
@*<body>*@
<body>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success">@TempData["Message"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["NoResults"] != null)
    {
        <div class="alert alert-warning">@TempData["NoResults"]</div>
    }


    <p class="create-new-button">
        <!-- Trigger modal -->
        <button type="button" class="btn btn-primary create-new-button" data-bs-toggle="modal" data-bs-target="#createArticleModal">
            Create News Article Popup
        </button>
    </p>

    <!-- Modal -->
    <div class="modal fade" id="createArticleModal" tabindex="-1" aria-labelledby="createArticleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title" id="createArticleModalLabel">Create News Article</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="create-form-container">
                        <h4>News Article Details</h4>
                        <hr />

                        <form method="post">
                            <div class="form-group">
                                <label asp-for="Article.NewsTitle" class="control-label">News Title</label>
                                <input asp-for="Article.NewsTitle" class="form-control" />
                                <span asp-validation-for="Article.NewsTitle" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Article.Headline" class="control-label">Headline</label>
                                <input asp-for="Article.Headline" class="form-control" />
                                <span asp-validation-for="Article.Headline" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Article.NewsContent" class="control-label">News Content</label>
                                <textarea asp-for="Article.NewsContent" class="form-control" rows="8"></textarea> @* Increased rows for textarea *@
                                <span asp-validation-for="Article.NewsContent" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Article.NewsSource" class="control-label">News Source</label>
                                <input asp-for="Article.NewsSource" class="form-control" />
                                <span asp-validation-for="Article.NewsSource" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Article.NewsStatus" class="control-label">News Status</label>
                                <select asp-for="Article.NewsStatus" class="form-control">
                                    <option value="true">Published</option> @* More descriptive options *@
                                    <option value="false">Draft</option>
                                </select>
                                <span asp-validation-for="Article.NewsStatus" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Article.CategoryId" class="control-label">Category</label>
                                <select asp-for="Article.CategoryId" class="form-control">
                                    <option value="">-- Select Category --</option>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.CategoryId">@category.CategoryName</option>
                                    }
                                </select>
                                <span asp-validation-for="Article.CategoryId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Tags</label>
                                <br />
                                @foreach (var tag in Model.Tags)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="Article.NewsTagIds" value="@tag.TagId" id="tag-@tag.TagId" />
                                        <label class="form-check-label" for="tag-@tag.TagId">@tag.TagName</label>
                                    </div>
                                }
                                <span asp-validation-for="Article.NewsTagIds" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Create News Article" class="btn btn-primary" />
                            </div>
                        </form>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <hr/>

    <h1 class="text-center">News Feed</h1>

    <div class="search-bar">
        <form method="get" asp-action="Search" method="get" class="d-flex">
            <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search by title or headline" />
            <select name="categoryId" class="form-control me-2" asp-items="ViewBag.CategoryId">
                <option value="">-- Select Category --</option>
            </select>
            <select name="tagId" class="form-control me-2" asp-items="ViewBag.TagId">
                <option value="">-- Select Tag --</option>
            </select>
            <button type="submit" class="btn btn-primary">Search</button>
        </form>
    </div>

    <hr/>


    <div class="news-container">
        @if (!Model.Articles.Any())
        {
            <div class="alert alert-info">No articles found.</div>
        }
        else
        {
            @foreach (var item in Model.Articles)
            {
                <div class="news-article">
                    <h2>
                        @Html.DisplayFor(modelItem => item.NewsTitle)
                    </h2>
                    <h3>
                        @Html.DisplayFor(modelItem => item.Headline)
                    </h3>
                    <h4>Status: @(item.NewsStatus == true ? "Published" : "Draft")</h4>
                    <div class="news-content-preview">
                        @{
                            // Create a preview of the news content, e.g., first 100 characters
                            string contentPreview = item.NewsContent != null && item.NewsContent.Length > 100 ? item.NewsContent.Substring(0, 100) + "..." : item.NewsContent;
                        }
                        @contentPreview
                    </div>
                    <div class="news-meta">
                        @{
                            var modifiedDateDisplay = item.ModifiedDate?.ToString() ?? "N/A";
                            var modifiedByDisplay = item.UpdatedBy?.AccountName.ToString() ?? "N/A";  // Safely access UpdatedBy and provide fallback
                        }
                        Published Date: @Html.DisplayFor(modelItem => modifiedDateDisplay)
                        | Source: @Html.DisplayFor(modelItem => item.NewsSource)
                        | Category: @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        | Author : @Html.DisplayFor(modelItem => item.CreatedBy.AccountName)
                        | Modified by : @Html.DisplayFor(modelItem => modifiedByDisplay)
                    </div>
                    @foreach (var a in item.NewsTags)
                    {
                        <button type="button" class="btn btn-outline-primary">@a.Tag.TagName</button>
                    }
                    <div class="news-actions">
                        <a asp-page="/NewsArticles/Details" asp-route-id="@item.NewsArticleId" class="btn btn-sm btn-info">Read More</a>
                        <a asp-page="/NewsArticles/Edit" asp-route-id="@item.NewsArticleId" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-page="/NewsArticles/Delete" asp-route-id="@item.NewsArticleId" class="btn btn-sm btn-danger">Delete</a>
                    </div>
                </div>
            }
        }
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    // Create a connection to the SignalR hub
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("https://localhost:7041/newsHub")
        .build();

    // Listen for the "ReceiveNewsUpdate" event from the server
    connection.on("ReceiveNewsUpdate", function (articleId) {
        // Reload the page to get fresh data
        location.reload();
    });

    // Start the SignalR connection
    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>
</body>
</html>
